apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: %%COMPONENT_NAME%%
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.node.updateStrategy }}
  updateStrategy: {{- toYaml .Values.node.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: %%COMPONENT_NAME%%
  template:
    metadata:
      {{- if .Values.node.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.node.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: %%COMPONENT_NAME%%
        {{- if .Values.node.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.node.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "vsphere-csi.serviceAccountName" . }}
      {{- include "vsphere-csi.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.node.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.node.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.node.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.node.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.node.podAffinityPreset "component" %%COMPONENT_NAME%% "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.node.podAntiAffinityPreset "component" %%COMPONENT_NAME%% "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.node.nodeAffinityPreset.type "key" .Values.node.nodeAffinityPreset.key "values" .Values.node.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.node.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.node.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.node.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.node.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.node.priorityClassName }}
      priorityClassName: {{ .Values.node.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.node.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.node.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "vsphere-csi.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - %%commands%%
          securityContext:
            runAsUser: 0
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: foo
              mountPath: bar
        {{- end }}
        {{- if .Values.node.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.node.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: %%CONTAINER_NAME%%
          image: {{ template "vsphere-csi.image" . }}
          imagePullPolicy: {{ .Values.node.image.pullPolicy }}
          {{- if .Values.node.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.node.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.node.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.node.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.node.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.node.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.node.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.node.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: foo
              value: bar
            {{- if .Values.node.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.node.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.node.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.node.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.node.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.node.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
          - containerPort: 9808
            name: healthz
          {{- if .Values.node.resources }}
          resources: {{- toYaml .Values.node.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.node.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.node.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.node.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.node.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.node.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.node.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.node.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.node.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.node.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.node.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if .Values.node.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.node.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins/csi.vsphere.vmware.com
          type: DirectoryOrCreate
      - name: pods-mount-dir
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      - name: device-dir
        hostPath:
          path: /dev
      - name: blocks-dir
        hostPath:
          path: /sys/block
          type: Directory
      - name: sys-devices-dir
        hostPath:
          path: /sys/devices
          type: Directory
        {{- if .Values.node.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.node.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
